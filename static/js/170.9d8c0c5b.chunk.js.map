{"version":3,"file":"static/js/170.9d8c0c5b.chunk.js","mappings":"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","sources":["components/APIsResults/APIsResults.js","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst baseURL = 'https://api.themoviedb.org/3';\nconst key = '68a811a0e5d082821be437ada1cb6380';\n\n\nconst endUrl = {\n    trending: '/trending/movie/day',\n    idSearch: '/movie/'\n};\n\nexport const PopularFilms = async () => {\n    try{\n        const popularFilms = await axios.get(`${baseURL}${endUrl.trending}?api_key=${key}&page=1&language=en-US&include_adult=false`);\n        return popularFilms.data.results;\n    } catch(error) { \n        console.error(\"Error:\", error.message);\n    }\n};\n\nexport const searchForId = async (idMovie) => {\n    try{\n        const result = await axios.get(`${baseURL}${endUrl.idSearch}${idMovie}?api_key=${key}&page=1&language=en-US&include_adult=false`);\n        return result.data;\n    } catch(error) { \n        console.error(\"Error:\", error.message);\n    }\n}","import styled from \"styled-components\";\n\nexport const Button = styled.button`\nmargin: 20px 0 20px 20px;\npadding: 10px 20px; \nfont-size: 16px; \nbackground-color: #3498db;\ncolor: #fff; \nborder: none;\ncursor: pointer;\n\n&::before {\n    content: '\\\\2190';\n    margin-right: 5px;\n    font-size: 18px;\n}\n`;\n\nexport const BriefInfoMov = styled.div`\ndisplay: flex;\n// border-bottom: 2px solid #000;\nbox-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.3);\n`;\n\nexport const ImgInfoMov = styled.img`\nmargin: 0 0 15px 20px;\n`;\n\nexport const TextInfoMov = styled.div`\nmargin-left: 15px;\n`;","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { searchForId } from \"components/APIsResults/APIsResults\";\nimport { Button, BriefInfoMov, ImgInfoMov, TextInfoMov } from \"./MovieDetails.styled\";\n\nconst MovieDetails = () => {\n    const {movieId} = useParams();\n\n    const [movie, setMovie] = useState();\n    console.log('movie: ', movie);\n\n    useEffect(() => {\n        const searchPopularFilms = async () => {\n            try{\n                const result = await searchForId(movieId);\n                setMovie(result);\n            } catch (error) {\n                console.error(\"Error:\", error.message);\n            }\n        };\n        searchPopularFilms()\n    }, [movieId]);\n\n    return(\n        <>\n        {movie && (\n            <>\n        <Button>Go back</Button>\n        <BriefInfoMov>\n        <ImgInfoMov src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`} alt={movie.title}/>\n        <TextInfoMov>\n            <h2>{movie.title} ({movie.release_date.slice(0, 4)})</h2>\n            <p>User Scoce: {String(movie.popularity).slice(0, 2)}%</p>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n            <h3>Genres</h3>\n            <p>{Object.values(movie.genres).map(item => item.name).join(', ')}</p>\n        </TextInfoMov>\n        </BriefInfoMov>\n        </>\n        )}\n        </>\n    )\n};\n\nexport default MovieDetails;"],"names":["baseURL","key","endUrl","PopularFilms","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","popularFilms","_context","prev","next","axios","concat","sent","abrupt","data","results","t0","console","error","message","stop","apply","arguments","searchForId","_ref2","_callee2","idMovie","result","_context2","_x","Button","styled","_templateObject","_taggedTemplateLiteral","BriefInfoMov","_templateObject2","ImgInfoMov","_templateObject3","TextInfoMov","_templateObject4","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","log","useEffect","searchPopularFilms","_jsx","_Fragment","children","_jsxs","src","poster_path","alt","title","release_date","slice","String","popularity","overview","Object","values","genres","map","item","name","join"],"sourceRoot":""}